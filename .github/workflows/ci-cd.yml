name: CI - build, test, publish image

on:
  push:
    branches: [ master ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    # Postgres service for tests (reachable as localhost:5432 from runner)
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: studybuddy
          POSTGRES_USER: studybuddy1
          POSTGRES_PASSWORD: 1122
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U studybuddy1 -d studybuddy"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Wait for Postgres to be ready
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U studybuddy1 -d studybuddy; then
              echo "postgres ready"
              exit 0
            fi
            echo "waiting for postgres..."
            sleep 2
          done
          echo "Postgres did not become ready in time" >&2
          exit 1
        env:
          PGPASSWORD: 1122

      - name: Run tests (unit + integration)
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/studybuddy
          SPRING_DATASOURCE_USERNAME: studybuddy1
          SPRING_DATASOURCE_PASSWORD: 1122
        run: mvn -B -DskipTests=false verify

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/studybuddy:latest
            ghcr.io/${{ github.repository_owner }}/studybuddy:${{ github.sha }}
          cache-from: type=gha,scope=studybuddy
          cache-to: type=gha,mode=max,scope=studybuddy

      - name: Dump surefire reports (on failure)
        if: failure()
        run: ls -la target/surefire-reports || true && sed -n '1,200p' target/surefire-reports/TEST-*.xml || true

